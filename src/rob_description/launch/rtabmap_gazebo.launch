<?xml version="1.0"?>

<launch>

  <include file="$(find moveit_robot_sim)/launch/robot_sim.launch" />

  <node name="ultrasonic_sensor" pkg="rob_description" type="ultrasonic_sensor.py" output="screen"/>
  <node name="camera" pkg="rob_description" type="camera_sensor.py" output="screen"/>


  <!-- Run Arduino Node with rosserial -->
  <node pkg="rosserial_arduino" type="serial_node.py" name="rosserial_arduino" output="screen">
    <param name="port" value="/dev/ttyACM0"/>
  </node>

  <!-- Choose visualization -->
  <arg name="rviz" default="true" />
  <arg name="rtabmap_viz" default="true" />

  <param name="use_sim_time" type="bool" value="true"/>

  <!-- Localization-only mode -->
  <arg name="localization" default="false"/>
  <arg if="$(arg localization)" name="rtabmap_args" default=""/>
  <arg unless="$(arg localization)" name="rtabmap_args" default="--delete_db_on_start"/>

  <!-- Remap camera topics for ESP32-CAM -->
  <remap from="rgb/image" to="/camera/rgb/image_raw"/>
  <remap from="rgb/camera_info" to="/camera/camera_info"/>
  <remap from="/rtabmap/scan" to="/ultrasonic/laser_scan"/>


  <group ns="rtabmap">
    <!-- SLAM (robot side) -->
    <node name="rtabmap" pkg="rtabmap_slam" type="rtabmap" output="screen" args="$(arg rtabmap_args)">
      <param name="frame_id" type="string" value="base_link"/>
      <param name="wait_for_transform" type="bool" value="true"/>
      <!-- Monocular SLAM configuration -->
      <param name="subscribe_depth" type="bool" value="false"/>
      <!-- No depth info for monocular -->
      <param name="subscribe_scan" type="bool" value="true"/>

      <param name="Rtabmap/DetectionRate" type="int" value="10"/>
      <param name="sync_queue_size" type="int" value="10"/>
      <param name="odom_frame_id" type="string" value="odom"/>
      <param name="odom_tf_linear_variance" type="double" value="0.001"/>
      <param name="odom_tf_angular_variance" type="double" value="0.001"/>

      <!-- RTAB-Map's parameters for monocular SLAM -->
      <param name="RGBD/NeighborLinkRefining" type="string" value="true"/>
      <!-- Do odometry correction with consecutive laser scans -->
      <param name="RGBD/ProximityBySpace" type="string" value="true"/>
      <!-- Local loop closure detection (using estimated position) with locations in WM -->
      <param name="RGBD/ProximityByTime" type="string" value="true"/>
      <!-- Local loop closure detection with locations in STM -->
      <param name="RGBD/ProximityPathMaxNeighbors" type="string" value="10"/>
      <!-- Do also proximity detection by space by merging close scans together. -->
      <param name="Reg/Strategy" type="string" value="1"/>
      <!-- 0=Visual, 1=ICP, 2=Visual+ICP -->
      <param name="Vis/MinInliers" type="string" value="12"/>
      <!-- 3D visual words correspondence distance -->
      <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>
      <!-- Optimize graph from initial node so /map -> /odom transform will be generated -->
      <param name="RGBD/OptimizeMaxError" type="string" value="4"/>
      <!-- Reject any loop closure causing large errors (>3x link's covariance) in the map -->
      <param name="Reg/Force3DoF" type="string" value="true"/>
      <!-- 2D SLAM -->
      <param name="Grid/Sensor" type="string" value="true"/>
      <!-- Create 2D occupancy grid from laser scan -->
      <param name="Mem/STMSize" type="string" value="30"/>
      <!-- increased to 30 to avoid adding too many loop closures on just seen locations -->
      <param name="RGBD/LocalRadius" type="string" value="5"/>
      <!-- limit length of proximity detections -->
      <param name="Icp/CorrespondenceRatio" type="string" value="0.2"/>
      <!-- minimum scan overlap to accept loop closure -->
      <param name="Icp/Strategy" type="string" value="false"/>
      <param name="Icp/PointToPlane" type="string" value="false"/>
      <param name="Icp/MaxCorrespondenceDistance" type="string" value="0.15"/>
      <param name="Icp/VoxelSize" type="string" value="0.05"/>
      <param name="approx_sync" type="bool" value="false"/>
      <param name="proj_min_height" type ="double" value="2.0"/>

      <!-- localization mode -->
      <param if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
      <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
      <param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/>
    </node>

    <!-- Visualisation RTAB-Map -->
    <node if="$(arg rtabmap_viz)" pkg="rtabmap_viz" type="rtabmap_viz" name="rtabmap_viz" args="-d $(find rtabmap_demos)/launch/config/rgbd_gui.ini" output="screen">
      <param name="subscribe_depth" type="bool" value="false"/>
      <!-- No depth for monocular -->
      <param name="subscribe_scan" type="bool" value="true"/>
      <param name="frame_id" type="string" value="base_link"/>
      <param name="wait_for_transform" type="bool" value="true"/>
      <param name="Rtabmap/PublishOdomToMapTransform" value="true"/>
    </node>

  </group>

  <!-- Visualisation RVIZ -->
  <node if="$(arg rviz)" pkg="rviz" type="rviz" name="rviz" args="-d $(find rtabmap_demos)/launch/config/demo_robot_mapping.rviz" output="screen"/>

  <!-- PointCloud for visualization (if needed) -->
  <node pkg="nodelet" type="nodelet" name="points_xyzrgb" args="standalone rtabmap_util/point_cloud_xyzrgb">
    <param name="sync_queue_size" type="int" value="10"/>
    <param name="voxel_size" type="double" value="0.01"/>
  </node>

  <node pkg="tf" type="static_transform_publisher" name="map_to_base_link" args="0 0 0 0 0 0 1 base_link map 100"/>
  <node pkg="tf" type="static_transform_publisher" name="sonar_to_base_link" args="0 0 0.2 0 0 0 base_link sonar 100" />



</launch>
